/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../common";

export declare namespace DDCStorage {
  export type DDCPropertiesStruct = {
    microCarat: BigNumberish;
    color: BigNumberish;
    clarity: BigNumberish;
    cut: BigNumberish;
    fluo: BigNumberish;
    polish: BigNumberish;
    sym: BigNumberish;
  };

  export type DDCPropertiesStructOutput = [
    microCarat: bigint,
    color: bigint,
    clarity: bigint,
    cut: bigint,
    fluo: bigint,
    polish: bigint,
    sym: bigint
  ] & {
    microCarat: bigint;
    color: bigint;
    clarity: bigint;
    cut: bigint;
    fluo: bigint;
    polish: bigint;
    sym: bigint;
  };
}

export interface DDCStorageInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "getDDCStruct"
      | "getDDCStructAsBytes32"
      | "getDDCUint256"
      | "getDDCUint256AsBytes32"
      | "getDDCUint256AsStruct"
      | "id"
      | "storeDDCBytes32"
      | "storeDDCStruct"
      | "storeDDCUint256"
      | "storeDDCUint256Raw"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getDDCStruct",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDDCStructAsBytes32",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDDCUint256",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDDCUint256AsBytes32",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDDCUint256AsStruct",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "id", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "storeDDCBytes32",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "storeDDCStruct",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "storeDDCUint256",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "storeDDCUint256Raw",
    values: [BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "getDDCStruct",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDDCStructAsBytes32",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDDCUint256",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDDCUint256AsBytes32",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDDCUint256AsStruct",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "id", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "storeDDCBytes32",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "storeDDCStruct",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "storeDDCUint256",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "storeDDCUint256Raw",
    data: BytesLike
  ): Result;
}

export interface DDCStorage extends BaseContract {
  connect(runner?: ContractRunner | null): DDCStorage;
  waitForDeployment(): Promise<this>;

  interface: DDCStorageInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getDDCStruct: TypedContractMethod<
    [_reportNumber: BigNumberish],
    [DDCStorage.DDCPropertiesStructOutput],
    "view"
  >;

  getDDCStructAsBytes32: TypedContractMethod<
    [_reportNumber: BigNumberish],
    [string],
    "view"
  >;

  getDDCUint256: TypedContractMethod<
    [_reportNumber: BigNumberish],
    [bigint],
    "view"
  >;

  getDDCUint256AsBytes32: TypedContractMethod<
    [_reportNumber: BigNumberish],
    [string],
    "view"
  >;

  getDDCUint256AsStruct: TypedContractMethod<
    [_reportNumber: BigNumberish],
    [DDCStorage.DDCPropertiesStructOutput],
    "view"
  >;

  id: TypedContractMethod<[], [bigint], "view">;

  storeDDCBytes32: TypedContractMethod<
    [
      _reportNumber: BigNumberish,
      _microCarat: BigNumberish,
      _color: BigNumberish,
      _clarity: BigNumberish,
      _cut: BigNumberish,
      _fluo: BigNumberish,
      _polish: BigNumberish,
      _sym: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  storeDDCStruct: TypedContractMethod<
    [
      _reportNumber: BigNumberish,
      _microCarat: BigNumberish,
      _color: BigNumberish,
      _clarity: BigNumberish,
      _cut: BigNumberish,
      _fluo: BigNumberish,
      _polish: BigNumberish,
      _sym: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  storeDDCUint256: TypedContractMethod<
    [
      _reportNumber: BigNumberish,
      _microCarat: BigNumberish,
      _color: BigNumberish,
      _clarity: BigNumberish,
      _cut: BigNumberish,
      _fluo: BigNumberish,
      _polish: BigNumberish,
      _sym: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  storeDDCUint256Raw: TypedContractMethod<
    [_reportNumber: BigNumberish, _ddc_bytes32: BytesLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "getDDCStruct"
  ): TypedContractMethod<
    [_reportNumber: BigNumberish],
    [DDCStorage.DDCPropertiesStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getDDCStructAsBytes32"
  ): TypedContractMethod<[_reportNumber: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getDDCUint256"
  ): TypedContractMethod<[_reportNumber: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getDDCUint256AsBytes32"
  ): TypedContractMethod<[_reportNumber: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getDDCUint256AsStruct"
  ): TypedContractMethod<
    [_reportNumber: BigNumberish],
    [DDCStorage.DDCPropertiesStructOutput],
    "view"
  >;
  getFunction(nameOrSignature: "id"): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "storeDDCBytes32"
  ): TypedContractMethod<
    [
      _reportNumber: BigNumberish,
      _microCarat: BigNumberish,
      _color: BigNumberish,
      _clarity: BigNumberish,
      _cut: BigNumberish,
      _fluo: BigNumberish,
      _polish: BigNumberish,
      _sym: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "storeDDCStruct"
  ): TypedContractMethod<
    [
      _reportNumber: BigNumberish,
      _microCarat: BigNumberish,
      _color: BigNumberish,
      _clarity: BigNumberish,
      _cut: BigNumberish,
      _fluo: BigNumberish,
      _polish: BigNumberish,
      _sym: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "storeDDCUint256"
  ): TypedContractMethod<
    [
      _reportNumber: BigNumberish,
      _microCarat: BigNumberish,
      _color: BigNumberish,
      _clarity: BigNumberish,
      _cut: BigNumberish,
      _fluo: BigNumberish,
      _polish: BigNumberish,
      _sym: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "storeDDCUint256Raw"
  ): TypedContractMethod<
    [_reportNumber: BigNumberish, _ddc_bytes32: BytesLike],
    [void],
    "nonpayable"
  >;

  filters: {};
}
